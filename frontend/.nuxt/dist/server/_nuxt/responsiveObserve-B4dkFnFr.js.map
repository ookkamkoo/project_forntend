{"version":3,"file":"responsiveObserve-B4dkFnFr.js","sources":["../../../../node_modules/ant-design-vue/es/_util/responsiveObserve.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { computed } from 'vue';\nimport { useToken } from '../theme/internal';\nexport const responsiveArray = ['xxxl', 'xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst getResponsiveMap = token => ({\n  xs: `(max-width: ${token.screenXSMax}px)`,\n  sm: `(min-width: ${token.screenSM}px)`,\n  md: `(min-width: ${token.screenMD}px)`,\n  lg: `(min-width: ${token.screenLG}px)`,\n  xl: `(min-width: ${token.screenXL}px)`,\n  xxl: `(min-width: ${token.screenXXL}px)`,\n  xxxl: `{min-width: ${token.screenXXXL}px}`\n});\nexport default function useResponsiveObserver() {\n  const [, token] = useToken();\n  return computed(() => {\n    const responsiveMap = getResponsiveMap(token.value);\n    const subscribers = new Map();\n    let subUid = -1;\n    let screens = {};\n    return {\n      matchHandlers: {},\n      dispatch(pointMap) {\n        screens = pointMap;\n        subscribers.forEach(func => func(screens));\n        return subscribers.size >= 1;\n      },\n      subscribe(func) {\n        if (!subscribers.size) this.register();\n        subUid += 1;\n        subscribers.set(subUid, func);\n        func(screens);\n        return subUid;\n      },\n      unsubscribe(paramToken) {\n        subscribers.delete(paramToken);\n        if (!subscribers.size) this.unregister();\n      },\n      unregister() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const handler = this.matchHandlers[matchMediaQuery];\n          handler === null || handler === void 0 ? void 0 : handler.mql.removeListener(handler === null || handler === void 0 ? void 0 : handler.listener);\n        });\n        subscribers.clear();\n      },\n      register() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const listener = _ref => {\n            let {\n              matches\n            } = _ref;\n            this.dispatch(_extends(_extends({}, screens), {\n              [screen]: matches\n            }));\n          };\n          const mql = window.matchMedia(matchMediaQuery);\n          mql.addListener(listener);\n          this.matchHandlers[matchMediaQuery] = {\n            mql,\n            listener\n          };\n          listener(mql);\n        });\n      },\n      responsiveMap\n    };\n  });\n}"],"names":[],"mappings":";;;AAGa,MAAA,kBAAkB,CAAC,QAAQ,OAAO,MAAM,MAAM,MAAM,MAAM,IAAI;AAC3E,MAAM,mBAAmB,CAAU,WAAA;AAAA,EACjC,IAAI,eAAe,MAAM,WAAW;AAAA,EACpC,IAAI,eAAe,MAAM,QAAQ;AAAA,EACjC,IAAI,eAAe,MAAM,QAAQ;AAAA,EACjC,IAAI,eAAe,MAAM,QAAQ;AAAA,EACjC,IAAI,eAAe,MAAM,QAAQ;AAAA,EACjC,KAAK,eAAe,MAAM,SAAS;AAAA,EACnC,MAAM,eAAe,MAAM,UAAU;AACvC;AACA,SAAwB,wBAAwB;AAC9C,QAAM,CAAG,EAAA,KAAK,IAAI;AAClB,SAAO,SAAS,MAAM;AACd,UAAA,gBAAgB,iBAAiB,MAAM,KAAK;AAC5C,UAAA,kCAAkB;AACxB,QAAI,SAAS;AACb,QAAI,UAAU,CAAA;AACP,WAAA;AAAA,MACL,eAAe,CAAC;AAAA,MAChB,SAAS,UAAU;AACP,kBAAA;AACV,oBAAY,QAAQ,CAAA,SAAQ,KAAK,OAAO,CAAC;AACzC,eAAO,YAAY,QAAQ;AAAA,MAC7B;AAAA,MACA,UAAU,MAAM;AACd,YAAI,CAAC,YAAY;AAAM,eAAK,SAAS;AAC3B,kBAAA;AACE,oBAAA,IAAI,QAAQ,IAAI;AAC5B,aAAK,OAAO;AACL,eAAA;AAAA,MACT;AAAA,MACA,YAAY,YAAY;AACtB,oBAAY,OAAO,UAAU;AAC7B,YAAI,CAAC,YAAY;AAAM,eAAK,WAAW;AAAA,MACzC;AAAA,MACA,aAAa;AACX,eAAO,KAAK,aAAa,EAAE,QAAQ,CAAU,WAAA;AACrC,gBAAA,kBAAkB,cAAc,MAAM;AACtC,gBAAA,UAAU,KAAK,cAAc,eAAe;AAClD,sBAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,IAAI,eAAe,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,QAAQ;AAAA,QAAA,CAChJ;AACD,oBAAY,MAAM;AAAA,MACpB;AAAA,MACA,WAAW;AACT,eAAO,KAAK,aAAa,EAAE,QAAQ,CAAU,WAAA;AACrC,gBAAA,kBAAkB,cAAc,MAAM;AAC5C,gBAAM,WAAW,CAAQ,SAAA;AACnB,gBAAA;AAAA,cACF;AAAA,YACE,IAAA;AACJ,iBAAK,SAAS,SAAS,SAAS,CAAC,GAAG,OAAO,GAAG;AAAA,cAC5C,CAAC,MAAM,GAAG;AAAA,YACX,CAAA,CAAC;AAAA,UAAA;AAEE,gBAAA,MAAa,SAAA,WAAW,eAAe;AAC7C,cAAI,YAAY,QAAQ;AACnB,eAAA,cAAc,eAAe,IAAI;AAAA,YACpC;AAAA,YACA;AAAA,UAAA;AAEF,mBAAS,GAAG;AAAA,QAAA,CACb;AAAA,MACH;AAAA,MACA;AAAA,IAAA;AAAA,EACF,CACD;AACH;","x_google_ignoreList":[0]}